from ._rnet import (
    BlockingClient,
    BlockingResponse,
    BlockingStreamer,
    BlockingWebSocket,
    Client,
    Cookie,
    delete,
    get,
    head,
    HeaderMap,
    ImpersonateOption,
    Message,
    Multipart,
    options,
    Part,
    patch,
    post,
    Proxy,
    put,
    request,
    Response,
    StatusCode,
    Streamer,
    trace,
    WebSocket,
    websocket,
    DNSResolverError,
    BodyError,
    BuilderError,
    ConnectionError,
    ConnectionResetError,
    DecodingError,
    RedirectError,
    TimeoutError,
    StatusError,
    RequestError,
    UpgradeError,
    URLParseError,
    MIMEParseError,
)
from ._enums import Impersonate, ImpersonateOS, Method, Version


__all__ = [
    "BlockingClient",
    "BlockingResponse",
    "BlockingStreamer",
    "BlockingWebSocket",
    "Client",
    "Cookie",
    "delete",
    "get",
    "head",
    "HeaderMap",
    "Impersonate",
    "ImpersonateOption",
    "ImpersonateOS",
    "Message",
    "Method",
    "Multipart",
    "options",
    "Part",
    "patch",
    "post",
    "Proxy",
    "put",
    "request",
    "Response",
    "StatusCode",
    "Streamer",
    "trace",
    "Version",
    "WebSocket",
    "websocket",
    "DNSResolverError",
    "BodyError",
    "BuilderError",
    "ConnectionError",
    "ConnectionResetError",
    "DecodingError",
    "RedirectError",
    "TimeoutError",
    "StatusError",
    "RequestError",
    "UpgradeError",
    "URLParseError",
    "MIMEParseError",
]

locals_ = locals()
for name_ in __all__:
    if name_[0].isalpha():
        setattr(locals_[name_], "__module__", "rnet")  